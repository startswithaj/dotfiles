alias obp="subl ~/dev/dotfiles/.extra"
alias sbp="~/dev/dotfiles/bootstrap.sh --force"

alias dev='cd /Users/Jake/dev'

# Commands I forget
#list functions declare -f

# GIT_AUTHOR_NAME=""
# GIT_COMMITTER_NAME="$GIT_AUTHOR_NAME"
# git config --global user.name "$GIT_AUTHOR_NAME"
# GIT_AUTHOR_EMAIL="jake.mc@icloud.com"
# GIT_COMMITTER_EMAIL="$GIT_AUTHOR_EMAIL"
# git config --global user.email "$GIT_AUTHOR_EMAIL"



#git $tuff
alias cleantracking='git remote prune origin'
alias tracking='git for-each-ref --format="%(refname:short)" | while read b; do if r=$(git config --get branch.$b.remote); then m=$(git config --get branch.$b.merge); echo "$b -> $r/${m##*/}"; fi; done'
alias authors='git shortlog -s -n --all' #an use -e as well for ungrouped

alias lgm='git log -1 --pretty | pbcopy'
alias lgc='git log --pretty=format:%h -n 1 | pbcopy'

alias gdf="git diff --diff-filter="
alias grh='git reset --hard'
alias gitchanged="git diff --name-only"
alias gx="xargs git "

fgd() { find . -iname $@ | xargs git diff; }
fgc() { find . -iname $@ | xargs git checkout; }
fga() { find . -iname $@ | xargs git add; }


alias gs="git status -s"
alias pretty="--graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative"
alias glme="git log --author=Jake "

# git config alias.search "!sh -c 'git log --all --oneline --grep=$1'"

unpushed(){
    branch=$(git branch --no-color 2> /dev/null | egrep '^\* [^\(]' | cut -c3-);
    git log --oneline "$branch" "^origin/$branch"
}


# JS $tuff
alias testit="mocha --compilers coffee:coffee-script/register"
alias testitdbg="mocha --debug-brk -R spec -G"
alias coverage="mocha --require test/coverageTest.coffee --reporter html-cov > coverage.html && open coverage.html"
alias inspecttest="node-inspector && open http://127.0.0.1:8080/debug?port=5858 && mocha --debug " # add path to test here
alias inspect="node-inspector && open http://127.0.0.1:8080/debug?port=5858 && npm start"
# find . -name '*.coffee' -or -name '*.js' | xargs wc -l

alias js2cf='pbpaste | js2coffee | pbcopy'

# convertsall javascript files to respective .coffee 
alias alljs2cf='find . -type f -name "*.js" | while read f; do echo "grinding $f to ${f/.js/.coffee} "; js2coffee "$f" > "${f/.js/.coffee}"; done'
alias rmalljs='find . -type f -name "*.js" | while read f; do echo "deleting $f "; rm $f; done'



md () { mkdir -p "$@" && cd "$@"; }
v () { more node_modules/"$@"/package.json | jq .version; }
f () { find . -name $@; }
fd() { find . -type d -name $@; }



alias ll='ls -la'
# alias for groc'ing any coffee files in a folder recursively except node_modules
alias dox="groc \`find . -name '*.coffee' ! -regex '.*node_modules.*'\`"
alias lastdir="ls -1tr | tail -1"
alias rmd="rm -Rf"
alias ipme="ipconfig getifaddr en0"
alias spot='mdfind -onlyin "$PWD"'
alias lock="osascript -e 'tell application \"System Events\" to sleep'"


relpath () {
    [ $# -ge 1 ] && [ $# -le 2 ] || return 1
    current="${2:+"$1"}"
    target="${2:-"$1"}"
    [ "$target" != . ] || target=/
    target="/${target##/}"
    [ "$current" != . ] || current=/
    current="${current:="/"}"
    current="/${current##/}"

    appendix="${target##/}"
    relative=''
    while appendix="${target#"$current"/}"
        [ "$current" != '/' ] && [ "$appendix" = "$target" ]; do
        if [ "$current" = "$appendix" ]; then
            relative="${relative:-.}"
            echo "${relative#/}"
            return 0
        fi
        current="${current%/*}"
        relative="$relative${relative:+/}.."
        echo current
        echo $appendix
        echo $relative
    done
    relative="$relative${relative:+${appendix:+/}}${appendix#/}"
    echo "$relative"
}
# Given two file names will find the path of each file and then determine
# the relative path of the second file to the first
relPathFiles () {
  (find . -iname $1 ; find . -iname $2) | xargs -n2 bash -cil 'relpath "$1" "$2"' arg0
}

# syntax highlight
# sudo easy_install Pygments 
function cless () {
    pygmentize -f terminal "$1" | less -R
}
